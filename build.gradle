plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.10'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ysb5397'
version = '0.0.1-SNAPSHOT'
description = 'hybrid community map with AI'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springAiVersion', "1.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// --- JWT 라이브러리 (최신 모듈 방식) ---
	// 1. jjwt-api: Jwts, Claims 등 핵심 API
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	// 2. jjwt-impl: 실제 구현체
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	// 3. jjwt-jackson: JSON 파서
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
